# Generated by Django 3.0 on 2022-09-26 15:02

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('mobile_no', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic/')),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('role_id', models.PositiveIntegerField(blank=True, choices=[(1, 'Admin'), (2, 'Users'), (3, 'RVT_LVT'), (4, 'Sub-Admin')], default=2, null=True)),
                ('state_id', models.PositiveIntegerField(blank=True, choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Deleted')], default=1, null=True)),
                ('status', models.BooleanField(default=True)),
                ('job_status', models.PositiveIntegerField(blank=True, choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Rejected'), (3, 'Apply')], default=0, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('year_of_experience', models.CharField(blank=True, max_length=2, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resume')),
                ('registration_no', models.CharField(blank=True, max_length=60, null=True)),
                ('is_verified', models.PositiveIntegerField(blank=True, choices=[(0, 'unverified'), (1, 'verified'), (2, 'declined'), (3, 'reject')], default=0, null=True)),
                ('about_me', models.TextField()),
                ('average_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('otp', models.CharField(blank=True, max_length=255, null=True)),
                ('verify_otp', models.BooleanField(default=0)),
                ('is_subscribe', models.BooleanField(default=0)),
                ('applied_for', models.CharField(blank=True, max_length=10, null=True)),
                ('user_to_rvt', models.BooleanField(default=0)),
                ('features_approval', models.BooleanField(default=0)),
                ('latitude', models.FloatField(default=0)),
                ('longitude', models.FloatField(default=0)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('session_id', models.CharField(blank=True, max_length=500, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('social_id', models.CharField(blank=True, max_length=255, null=True)),
                ('userId', models.CharField(blank=True, max_length=255, null=True)),
                ('social_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Google'), (2, 'APPLE')], null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=50, null=True)),
                ('is_push', models.BooleanField(default=True)),
                ('is_email', models.BooleanField(default=True)),
                ('is_text', models.BooleanField(default=True)),
                ('is_direct_message', models.BooleanField(default=True)),
                ('is_location_tracking', models.BooleanField(default=True)),
                ('is_verify_mail', models.BooleanField(default=False)),
                ('email_sent_on', models.DateTimeField(blank=True, null=True)),
                ('default_currency', models.CharField(blank=True, default='cad', max_length=50, null=True)),
            ],
            options={
                'db_table': 'tbl_user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='badge')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tbl_badge',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=255, null=True)),
                ('upload_resume', models.FileField(upload_to='resumes')),
                ('status', models.CharField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Rejected'), (3, 'Apply')], default=0, max_length=255)),
            ],
            options={
                'db_table': 'tbl_job_apply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tbl_subscription',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.PositiveIntegerField(blank=True, choices=[(1, 'Admin'), (2, 'Users'), (3, 'RVT_LVT'), (4, 'Sub-Admin')], default=3, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Android'), (2, 'IOS')], null=True)),
                ('device_name', models.CharField(blank=True, max_length=500, null=True)),
                ('device_token', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_device',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='badge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Badge'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
